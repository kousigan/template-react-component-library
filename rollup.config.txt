import resolve from "@rollup/plugin-node-resolve";
import commonjs from "@rollup/plugin-commonjs";
import typescript from "@rollup/plugin-typescript";
// import typescript from "rollup-plugin-typescript2";
import postcss from "rollup-plugin-postcss";
import dts from "rollup-plugin-dts";
import babel from 'rollup-plugin-babel';
import createStyledComponentsTransformer from 'typescript-plugin-styled-components';
import peerDepsExternal from "rollup-plugin-peer-deps-external";

const styledComponentsTransformer = createStyledComponentsTransformer({
  displayName: true,
});

const packageJson = require("./package.json");

export default [
  {
    input: "src/index.ts",
    output: [
      {
        file: packageJson.main,
        format: "cjs",
        sourcemap: true,
      },
      {
        file: packageJson.module,
        format: "esm",
        sourcemap: true,
      },
    ],
    plugins: [
      resolve(),
      commonjs(),
      babel({
        exclude: 'node_modules/**',
        presets: ['@babel/env', '@babel/preset-react']
      }),
      peerDepsExternal(),
      typescript({ tsconfig: "./tsconfig.json" }, 
      {
        transformers: [
          () => ({
            before: [styledComponentsTransformer],
          }),
        ],
      }
      ),
      postcss(),
    ],
  },
  {
    input: "dist/esm/types/index.d.ts",
    output: [{ file: "dist/index.d.ts", format: "esm" }],
    plugins: [dts()],
    external: [/\.(css|less|scss)$/,],
  },
];